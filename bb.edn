{:deps {jmglov/jmglov {:local/root "."}
        org.babashka/cli {:mvn/version "0.3.31"}
        io.github.borkdude/quickblog {:local/root "../clojure/quickblog"}
        #_"You use the newest SHA here:"
        #_{:git/sha "b69c11f4292702f78a8ac0a9f32379603bebf2af"}
        }
 :pods {clj-kondo/clj-kondo {:version "2022.05.31"}}
 :tasks
 {:init (def opts (merge {:blog-title "jmglov's blog"
                          :blog-author "Josh Glover"
                          :blog-description "A blog about stuff but also things."
                          :blog-root "https://jmglov.net/blog/"
                          :about-link "https://jmglov.net/"
                          :twitter-handle "jmglov"
                          :assets-dir "blog/assets"
                          :num-index-posts 3
                          :cache-dir ".cache"
                          :favicon true
                          :favicon-dir "favicon"
                          :out-dir "public/blog"
                          :posts-dir "blog/posts"
                          :templates-dir "blog/templates"}
                         (cli/parse-opts *command-line-args*)))

  :requires ([babashka.fs :as fs]
             [quickblog.api :as qb]
             [babashka.cli :as cli])

  new {:doc "Create new blog article"
       :task (qb/new opts)}

  refresh-templates {:doc "Update to latest templates."
                     :task (qb/refresh-templates opts)}

  render {:doc "Render website"
          :task (load-file "render.clj")}

  render-blog {:doc "Render blog"
               :requires ([quickblog.internal :as lib])
               :task (let [{:keys [favicon-dir out-dir]} opts]
                       (fs/create-dirs out-dir)
                       (doseq [path (fs/glob favicon-dir "**")
                               :let [source (fs/file path)
                                     target (fs/file out-dir (fs/file-name source))]]
                         (when (seq (fs/modified-since target source))
                           (println "favicon modified; copying"
                                    (str source) "->" (str target))
                           (fs/copy source target {:replace-existing true})))
                       (qb/quickblog opts))}

  publish {:doc "Publish to jmglov.net"
           :depends [render publish-blog]
           :task (shell "aws s3 sync public/ s3://jmglov.net/")}

  publish-blog {:doc "Publish blog"
                :depends [render-blog]
                :task (shell "aws s3 sync --delete public/blog/ s3://jmglov.net/blog/")}

  clean {:doc "Remove .work and public directory"
         :task (do (fs/delete-tree ".cache")
                   (fs/delete-tree "public"))}

  watch  {:doc "Watch posts and templates and render file changes"
          :task (qb/watch opts)}}}
